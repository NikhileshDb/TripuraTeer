/*
! tailwindcss v3.0.23 | MIT License | https://tailwindcss.com
*/

/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
  box-sizing: border-box;
  /* 1 */
  border-width: 0;
  /* 2 */
  border-style: solid;
  /* 2 */
  border-color: #e5e7eb;
  /* 2 */
}

::before,
::after {
  --tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
*/

html {
  line-height: 1.5;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -moz-tab-size: 4;
  /* 3 */
  -o-tab-size: 4;
     tab-size: 4;
  /* 3 */
  font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  /* 4 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
  margin: 0;
  /* 1 */
  line-height: inherit;
  /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
  height: 0;
  /* 1 */
  color: inherit;
  /* 2 */
  border-top-width: 1px;
  /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/*
1. Use the user's configured `mono` font family by default.
2. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/*
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
  text-indent: 0;
  /* 1 */
  border-color: inherit;
  /* 2 */
  border-collapse: collapse;
  /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: inherit;
  /* 1 */
  color: inherit;
  /* 1 */
  margin: 0;
  /* 2 */
  padding: 0;
  /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
[type='button'],
[type='reset'],
[type='submit'] {
  -webkit-appearance: button;
  /* 1 */
  background-color: transparent;
  /* 2 */
  background-image: none;
  /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
  outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

input:-ms-input-placeholder, textarea:-ms-input-placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

input::placeholder,
textarea::placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role="button"] {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/

:disabled {
  cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block;
  /* 1 */
  vertical-align: middle;
  /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
  max-width: 100%;
  height: auto;
}

/*
Ensure the default browser behavior of the `hidden` attribute.
*/

[hidden] {
  display: none;
}

*, ::before, ::after {
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}

.container {
  width: 100%;
}

@media (min-width: 640px) {
  .container {
    max-width: 640px;
  }
}

@media (min-width: 768px) {
  .container {
    max-width: 768px;
  }
}

@media (min-width: 1024px) {
  .container {
    max-width: 1024px;
  }
}

@media (min-width: 1280px) {
  .container {
    max-width: 1280px;
  }
}

@media (min-width: 1536px) {
  .container {
    max-width: 1536px;
  }
}

.static {
  position: static;
}

.fixed {
  position: fixed;
}

.absolute {
  position: absolute;
}

.relative {
  position: relative;
}

.bottom-0 {
  bottom: 0px;
}

.right-0 {
  right: 0px;
}

.right-\[10px\] {
  right: 10px;
}

.right-\[20px\] {
  right: 20px;
}

.z-\[-10\] {
  z-index: -10;
}

.z-\[100\] {
  z-index: 100;
}

.z-\[10\] {
  z-index: 10;
}

.z-\[80\] {
  z-index: 80;
}

.z-\[10\%\] {
  z-index: 10%;
}

.-my-2 {
  margin-top: -0.5rem;
  margin-bottom: -0.5rem;
}

.mt-\[60px\] {
  margin-top: 60px;
}

.mt-\[40px\] {
  margin-top: 40px;
}

.mt-\[20px\] {
  margin-top: 20px;
}

.block {
  display: block;
}

.inline-block {
  display: inline-block;
}

.flex {
  display: flex;
}

.table {
  display: table;
}

.contents {
  display: contents;
}

.hidden {
  display: none;
}

.h-\[500px\] {
  height: 500px;
}

.h-full {
  height: 100%;
}

.h-\[300\] {
  height: 300;
}

.h-auto {
  height: auto;
}

.h-\[50px\] {
  height: 50px;
}

.h-screen {
  height: 100vh;
}

.w-\[50\%\] {
  width: 50%;
}

.w-full {
  width: 100%;
}

.w-\[500px\] {
  width: 500px;
}

.w-auto {
  width: auto;
}

.w-\[300px\] {
  width: 300px;
}

.w-\[10px\] {
  width: 10px;
}

.w-\[34px\] {
  width: 34px;
}

.w-\[28px\] {
  width: 28px;
}

.min-w-full {
  min-width: 100%;
}

.translate-x-20 {
  --tw-translate-x: 5rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.translate-x-40 {
  --tw-translate-x: 10rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.translate-x-80 {
  --tw-translate-x: 20rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.translate-x-\[100\%\] {
  --tw-translate-x: 100%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.translate-x-\[200\%\] {
  --tw-translate-x: 200%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.translate-x-0 {
  --tw-translate-x: 0px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.transform {
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.cursor-pointer {
  cursor: pointer;
}

.flex-row {
  flex-direction: row;
}

.flex-col {
  flex-direction: column;
}

.items-center {
  align-items: center;
}

.justify-center {
  justify-content: center;
}

.justify-between {
  justify-content: space-between;
}

.justify-evenly {
  justify-content: space-evenly;
}

.gap-3 {
  gap: 0.75rem;
}

.gap-4 {
  gap: 1rem;
}

.gap-10 {
  gap: 2.5rem;
}

.gap-2 {
  gap: 0.5rem;
}

.gap-0 {
  gap: 0px;
}

.gap-6 {
  gap: 1.5rem;
}

.space-x-2 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(0.5rem * var(--tw-space-x-reverse));
  margin-left: calc(0.5rem * calc(1 - var(--tw-space-x-reverse)));
}

.divide-y > :not([hidden]) ~ :not([hidden]) {
  --tw-divide-y-reverse: 0;
  border-top-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));
  border-bottom-width: calc(1px * var(--tw-divide-y-reverse));
}

.divide-gray-200 > :not([hidden]) ~ :not([hidden]) {
  --tw-divide-opacity: 1;
  border-color: rgb(229 231 235 / var(--tw-divide-opacity));
}

.self-center {
  align-self: center;
}

.overflow-hidden {
  overflow: hidden;
}

.overflow-x-auto {
  overflow-x: auto;
}

.whitespace-normal {
  white-space: normal;
}

.whitespace-nowrap {
  white-space: nowrap;
}

.rounded {
  border-radius: 0.25rem;
}

.rounded-lg {
  border-radius: 0.5rem;
}

.border-b {
  border-bottom-width: 1px;
}

.border-gray-200 {
  --tw-border-opacity: 1;
  border-color: rgb(229 231 235 / var(--tw-border-opacity));
}

.bg-\[\#35072b\] {
  --tw-bg-opacity: 1;
  background-color: rgb(53 7 43 / var(--tw-bg-opacity));
}

.bg-gray-50 {
  --tw-bg-opacity: 1;
  background-color: rgb(249 250 251 / var(--tw-bg-opacity));
}

.bg-white {
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity));
}

.bg-\[\#320428\] {
  --tw-bg-opacity: 1;
  background-color: rgb(50 4 40 / var(--tw-bg-opacity));
}

.bg-\[\#2f0327e0\] {
  background-color: #2f0327e0;
}

.bg-\[\#d58107\] {
  --tw-bg-opacity: 1;
  background-color: rgb(213 129 7 / var(--tw-bg-opacity));
}

.bg-\[\#d67f04\] {
  --tw-bg-opacity: 1;
  background-color: rgb(214 127 4 / var(--tw-bg-opacity));
}

.bg-\[\#430536\] {
  --tw-bg-opacity: 1;
  background-color: rgb(67 5 54 / var(--tw-bg-opacity));
}

.bg-gradient-to-r {
  background-image: linear-gradient(to right, var(--tw-gradient-stops));
}

.bg-\[url\(\'\.\.\/\.\.\/static\/images\/bg\.png\'\)\] {
  background-image: url('../../static/images/bg.png');
}

.bg-gradient-to-br {
  background-image: linear-gradient(to bottom right, var(--tw-gradient-stops));
}

.from-\[\#320428\] {
  --tw-gradient-from: #320428;
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to, rgb(50 4 40 / 0));
}

.from-\[\#4b043c\] {
  --tw-gradient-from: #4b043c;
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to, rgb(75 4 60 / 0));
}

.via-\[\#800765\] {
  --tw-gradient-stops: var(--tw-gradient-from), #800765, var(--tw-gradient-to, rgb(128 7 101 / 0));
}

.to-\[\#320428\] {
  --tw-gradient-to: #320428;
}

.to-\[\#ff5100\] {
  --tw-gradient-to: #ff5100;
}

.to-\[\#8b2c00\] {
  --tw-gradient-to: #8b2c00;
}

.to-\[\#4b043c\] {
  --tw-gradient-to: #4b043c;
}

.to-\[\#7e0763\] {
  --tw-gradient-to: #7e0763;
}

.bg-cover {
  background-size: cover;
}

.fill-\[\#ecd50465\] {
  fill: #ecd50465;
}

.fill-\[\#d58107\] {
  fill: #d58107;
}

.fill-white {
  fill: #fff;
}

.stroke-0 {
  stroke-width: 0;
}

.p-3 {
  padding: 0.75rem;
}

.p-2 {
  padding: 0.5rem;
}

.p-4 {
  padding: 1rem;
}

.px-\[20\%\] {
  padding-left: 20%;
  padding-right: 20%;
}

.py-\[50px\] {
  padding-top: 50px;
  padding-bottom: 50px;
}

.py-2 {
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
}

.px-6 {
  padding-left: 1.5rem;
  padding-right: 1.5rem;
}

.py-3 {
  padding-top: 0.75rem;
  padding-bottom: 0.75rem;
}

.py-4 {
  padding-top: 1rem;
  padding-bottom: 1rem;
}

.px-2 {
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}

.py-10 {
  padding-top: 2.5rem;
  padding-bottom: 2.5rem;
}

.px-3 {
  padding-left: 0.75rem;
  padding-right: 0.75rem;
}

.px-20 {
  padding-left: 5rem;
  padding-right: 5rem;
}

.px-10 {
  padding-left: 2.5rem;
  padding-right: 2.5rem;
}

.px-8 {
  padding-left: 2rem;
  padding-right: 2rem;
}

.py-1 {
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
}

.px-\[50px\] {
  padding-left: 50px;
  padding-right: 50px;
}

.py-\[10px\] {
  padding-top: 10px;
  padding-bottom: 10px;
}

.px-\[20px\] {
  padding-left: 20px;
  padding-right: 20px;
}

.pt-10 {
  padding-top: 2.5rem;
}

.pb-2 {
  padding-bottom: 0.5rem;
}

.pt-\[150px\] {
  padding-top: 150px;
}

.pb-20 {
  padding-bottom: 5rem;
}

.pb-10 {
  padding-bottom: 2.5rem;
}

.pt-\[-100px\] {
  padding-top: -100px;
}

.pt-\[50px\] {
  padding-top: 50px;
}

.pt-\[15\%\] {
  padding-top: 15%;
}

.pt-\[20\%\] {
  padding-top: 20%;
}

.pt-\[20px\] {
  padding-top: 20px;
}

.text-left {
  text-align: left;
}

.text-center {
  text-align: center;
}

.align-middle {
  vertical-align: middle;
}

.text-\[45px\] {
  font-size: 45px;
}

.text-2xl {
  font-size: 1.5rem;
  line-height: 2rem;
}

.text-\[200px\] {
  font-size: 200px;
}

.text-\[24px\] {
  font-size: 24px;
}

.text-xs {
  font-size: 0.75rem;
  line-height: 1rem;
}

.text-\[1\.7rem\] {
  font-size: 1.7rem;
}

.text-\[34px\] {
  font-size: 34px;
}

.text-\[100px\] {
  font-size: 100px;
}

.text-\[2\.7rem\] {
  font-size: 2.7rem;
}

.text-\[2\.5rem\] {
  font-size: 2.5rem;
}

.font-bold {
  font-weight: 700;
}

.font-medium {
  font-weight: 500;
}

.font-semibold {
  font-weight: 600;
}

.uppercase {
  text-transform: uppercase;
}

.tracking-wider {
  letter-spacing: 0.05em;
}

.text-\[\#d58107\] {
  --tw-text-opacity: 1;
  color: rgb(213 129 7 / var(--tw-text-opacity));
}

.text-white {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}

.text-gray-500 {
  --tw-text-opacity: 1;
  color: rgb(107 114 128 / var(--tw-text-opacity));
}

.text-gray-700 {
  --tw-text-opacity: 1;
  color: rgb(55 65 81 / var(--tw-text-opacity));
}

.shadow {
  --tw-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.shadow-lg {
  --tw-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color), 0 4px 6px -4px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.shadow-xl {
  --tw-shadow: 0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 20px 25px -5px var(--tw-shadow-color), 0 8px 10px -6px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.blur-lg {
  --tw-blur: blur(16px);
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.transition {
  transition-property: color, background-color, border-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-text-decoration-color, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-text-decoration-color, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.transition-all {
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.duration-300 {
  transition-duration: 300ms;
}

/* mycustom */

.shadow_blur {
  text-shadow: 0px 0px 10px  rgb(255, 255, 255) ;
}

#count_down div {
  font-size:80px;
  color: white;
  font-weight: bold;
  text-shadow: 1px 1px 20px  black ;
}

@media only screen and (max-width:600px){
  #count_down div {
    font-size:34px;
  }
}

/* My Dice Css Styles */

.container{
  perspective: 1000px;
  perspective-origin: 50% 50%;
  font-family: 'fontawesome';
  height: 300px;
}

.container .cube{
  position: relative;
  left: 45%;
  top: 40%;
  height: 200px;
  width: 200px;
  transform-style: preserve-3d;
  cursor: pointer;
  transform: rotateX(135deg) rotateY(-217deg) rotateZ(-88deg);
}

.container .cube div{
  position: absolute;
  box-sizing: border-box;
  padding: 10px;
  height: 100%;
  width: 100%;
  border:2px solid #eee;
  color: #fff;
}

.container .cube div span{
  font-size: 32px;
  font-family: 'fontawesome';
}

.container .cube .front{
  background: #320428;
  transform: translateZ(100px);
}

.container .cube .back{
  background: #320428;
  transform: translateZ(-100px) rotateY(180deg);
}

.container .cube .right{
  background: #320428;
  transform-origin: top right;
  transform: rotateY(-270deg) translateX(100px);
}

.container .cube .left{
  background: #320428;
  transform-origin: center left;
  transform: rotateY(270deg) translateX(-100px);
}

.container .cube .top{
  background: #320428;
  transform-origin: top center;
  transform: rotateX(-270deg) translateY(-100px);
}

.container .cube .bottom{
  background: #320428;
  transform-origin: bottom center;
  transform: rotateX(270deg) translateY(100px);
}

/*DOT ALIGNMENT */

.container .cube .front span,.container .cube .left span:nth-child(1),
  .container .cube .right span:nth-child(1){
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%,-50%);
}

.container .cube .top span:nth-child(1),.container .cube .left span:nth-child(2),
  .container .cube .right span:nth-child(2),
  .container .cube .bottom span:nth-child(1){
  position: absolute;
  top: 35px;
  left: 35px;
}

.container .cube .top span:nth-child(2),.container .cube .left span:nth-child(3),
  .container .cube .right span:nth-child(3),
  .container .cube .bottom span:nth-child(2){
  position: absolute;
  bottom: 35px;
  right: 35px;
}

.container .cube .right span:nth-child(4),
  .container .cube .bottom span:nth-child(3){
  position: absolute;
  top: 35px;
  right: 35px;
}

.container .cube .right span:nth-child(5),
  .container .cube .bottom span:nth-child(4){
  position: absolute;
  bottom: 35px;
  left: 35px;
}

.container .cube .back pre{
  font-size: 32px;
  font-family: 'fontawesome';
  margin: 0;
}

.container .cube .back .firstPre{
  position: absolute;
  top: 45px;
  left: 26px;
}

.container .cube .back .secondPre{
  position: absolute;
  bottom: 45px;
  right: 26px;
}

@-webkit-keyframes animate {
  25%{
    transform: rotateX(45deg) rotateY(65deg) rotateZ(35deg);
    top: 0%;
  }

  50%{
    transform: rotateX(145deg) rotateY(165deg) rotateZ(135deg);
    top: 30%;
  }

  75%{
    transform: rotateX(276deg) rotateY(256deg) rotateZ(246deg);
    top: 45%;
  }

  100%{
    transform: rotateX(376deg) rotateY(356deg) rotateZ(346deg);
    top: 60%;
  }
}

@keyframes animate {
  25%{
    transform: rotateX(45deg) rotateY(65deg) rotateZ(35deg);
    top: 0%;
  }

  50%{
    transform: rotateX(145deg) rotateY(165deg) rotateZ(135deg);
    top: 30%;
  }

  75%{
    transform: rotateX(276deg) rotateY(256deg) rotateZ(246deg);
    top: 45%;
  }

  100%{
    transform: rotateX(376deg) rotateY(356deg) rotateZ(346deg);
    top: 60%;
  }
}

.hover\:bg-\[\#d58107\]:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(213 129 7 / var(--tw-bg-opacity));
}

.hover\:text-blue-700:hover {
  --tw-text-opacity: 1;
  color: rgb(29 78 216 / var(--tw-text-opacity));
}

.hover\:text-blue-500:hover {
  --tw-text-opacity: 1;
  color: rgb(59 130 246 / var(--tw-text-opacity));
}

.hover\:text-\[\#d58107\]:hover {
  --tw-text-opacity: 1;
  color: rgb(213 129 7 / var(--tw-text-opacity));
}

.hover\:shadow-lg:hover {
  --tw-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color), 0 4px 6px -4px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.focus\:outline-none:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

@media (min-width: 640px) {
  .sm\:fixed {
    position: fixed;
  }

  .sm\:relative {
    position: relative;
  }

  .sm\:top-\[10\%\] {
    top: 10%;
  }

  .sm\:left-\[10\%\] {
    left: 10%;
  }

  .sm\:-mx-6 {
    margin-left: -1.5rem;
    margin-right: -1.5rem;
  }

  .sm\:block {
    display: block;
  }

  .sm\:hidden {
    display: none;
  }

  .sm\:h-\[1200px\] {
    height: 1200px;
  }

  .sm\:h-\[500px\] {
    height: 500px;
  }

  .sm\:h-auto {
    height: auto;
  }

  .sm\:w-3\/12 {
    width: 25%;
  }

  .sm\:w-2\/3 {
    width: 66.666667%;
  }

  .sm\:w-full {
    width: 100%;
  }

  .sm\:w-\[500px\] {
    width: 500px;
  }

  .sm\:w-auto {
    width: auto;
  }

  .sm\:translate-x-\[0\%\] {
    --tw-translate-x: 0%;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }

  .sm\:translate-x-\[0\] {
    --tw-translate-x: 0;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }

  .sm\:translate-x-0 {
    --tw-translate-x: 0px;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }

  .sm\:flex-row {
    flex-direction: row;
  }

  .sm\:justify-evenly {
    justify-content: space-evenly;
  }

  .sm\:gap-10 {
    gap: 2.5rem;
  }

  .sm\:overflow-visible {
    overflow: visible;
  }

  .sm\:rounded-lg {
    border-radius: 0.5rem;
  }

  .sm\:px-6 {
    padding-left: 1.5rem;
    padding-right: 1.5rem;
  }

  .sm\:px-\[20\%\] {
    padding-left: 20%;
    padding-right: 20%;
  }

  .sm\:px-\[10\%\] {
    padding-left: 10%;
    padding-right: 10%;
  }

  .sm\:px-\[50px\] {
    padding-left: 50px;
    padding-right: 50px;
  }

  .sm\:py-\[10px\] {
    padding-top: 10px;
    padding-bottom: 10px;
  }

  .sm\:pt-\[0\] {
    padding-top: 0;
  }

  .sm\:text-\[2\.7rem\] {
    font-size: 2.7rem;
  }

  .sm\:text-\[60px\] {
    font-size: 60px;
  }

  .sm\:text-\[45px\] {
    font-size: 45px;
  }

  .sm\:text-\[200px\] {
    font-size: 200px;
  }
}

@media (min-width: 1024px) {
  .lg\:-mx-8 {
    margin-left: -2rem;
    margin-right: -2rem;
  }

  .lg\:px-8 {
    padding-left: 2rem;
    padding-right: 2rem;
  }
}
  